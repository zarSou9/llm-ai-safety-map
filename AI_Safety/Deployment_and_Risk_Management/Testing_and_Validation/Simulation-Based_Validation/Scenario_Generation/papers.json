[
  {
    "url": "https://arxiv.org/pdf/2108.13796v1.pdf",
    "title": "Addressing the IEEE AV Test Challenge with Scenic and VerifAI",
    "published_date": "2021-08-01",
    "abstract": "This paper summarizes our formal approach to testing autonomous vehicles (AVs) in simulation for the IEEE AV Test Challenge. We demonstrate a systematic testing framework leveraging our previous work on formally-driven simulation for intelligent cyber-physical systems. First, to model and generate interactive scenarios involving multiple agents, we used Scenic, a probabilistic programming language for specifying scenarios. A Scenic program defines an abstract scenario as a distribution over configurations of physical objects and their behaviors over time. Sampling from an abstract scenario yields many different concrete scenarios which can be run as test cases for the AV. Starting from a Scenic program encoding an abstract driving scenario, we can use the Verifai toolkit to search within the scenario for failure cases with respect to multiple AV evaluation metrics. We demonstrate the effectiveness of our testing framework by identifying concrete failure scenarios for an open-source autopilot, Apollo, starting from a variety of realistic traffic scenarios.",
    "citation_count": 13,
    "summary": "This paper presents a formal testing framework for autonomous vehicles (AVs) using Scenic, a probabilistic programming language for scenario generation, and VerifAI, a search tool for finding AV failures. The framework effectively identifies failure scenarios for an open-source autopilot by systematically sampling and evaluating concrete instances from abstract driving scenarios."
  },
  {
    "url": "https://arxiv.org/pdf/2110.14870v2.pdf",
    "title": "A Scenario-Based Platform for Testing Autonomous Vehicle Behavior Prediction Models in Simulation",
    "published_date": "2021-10-28",
    "abstract": "Behavior prediction remains one of the most challenging tasks in the autonomous vehicle (AV) software stack. Forecasting the future trajectories of nearby agents plays a critical role in ensuring road safety, as it equips AVs with the necessary information to plan safe routes of travel. However, these prediction models are data-driven and trained on data collected in real life that may not represent the full range of scenarios an AV can encounter. Hence, it is important that these prediction models are extensively tested in various test scenarios involving interactive behaviors prior to deployment. To support this need, we present a simulation-based testing platform which supports (1) intuitive scenario modeling with a probabilistic programming language called Scenic, (2) specifying a multi-objective evaluation metric with a partial priority ordering, (3) falsification of the provided metric, and (4) parallelization of simulations for scalable testing. As a part of the platform, we provide a library of 25 Scenic programs that model challenging test scenarios involving interactive traffic participant behaviors. We demonstrate the effectiveness and the scalability of our platform by testing a trained behavior prediction model and searching for failure scenarios.",
    "citation_count": 8,
    "summary": "This paper introduces a simulation platform for rigorously testing autonomous vehicle behavior prediction models, using Scenic's probabilistic programming to generate diverse scenarios, a multi-objective evaluation metric, and parallelization for efficient and scalable testing. The platform includes a library of challenging scenarios and demonstrates its effectiveness in identifying model failures."
  },
  {
    "url": "https://arxiv.org/pdf/2003.03712.pdf",
    "title": "Adaptive Testing Scenario Library Generation for Connected and Automated Vehicles",
    "published_date": "2020-03-08",
    "abstract": "How to generate testing scenario libraries for connected and automated vehicles (CAVs) is a major challenge faced by the industry. In previous studies, to evaluate maneuver challenge of a scenario, surrogate models (SMs) are often used without explicit knowledge of the CAV under test. However, performance dissimilarities between the SM and the CAV under test usually exist, and it can lead to the generation of suboptimal scenario libraries. In this paper, an adaptive testing scenario library generation (ATSLG) method is proposed to solve this problem. A customized testing scenario library for a specific CAV model is generated through an adaptive process. To compensate the performance dissimilarities and leverage each test of the CAV, Bayesian optimization techniques are applied with classification-based Gaussian Process Regression and a new-designed acquisition function. Comparing with a pre-determined library, a CAV can be tested and evaluated in a more efficient manner with the customized library. To validate the proposed method, a cut-in case study was performed and the results demonstrate that the proposed method can further accelerate the evaluation process by a few orders of magnitude.",
    "citation_count": 4,
    "summary": "This paper introduces an adaptive testing scenario library generation (ATSLG) method for connected and automated vehicles (CAVs), using Bayesian optimization to create customized test libraries that account for performance differences between surrogate models and the CAV under test, resulting in significantly more efficient evaluation."
  },
  {
    "url": "https://arxiv.org/pdf/2109.07960.pdf",
    "title": "Efficient and Effective Generation of Test Cases for Pedestrian Detection - Search-based Software Testing of Baidu Apollo in SVL",
    "published_date": "2021-08-01",
    "abstract": "With the growing capabilities of autonomous vehicles, there is a higher demand for sophisticated and pragmatic quality assurance approaches for machine learning-enabled systems in the automotive AI context. The use of simulation-based prototyping platforms provides the possibility for early-stage testing, enabling inexpensive testing and the ability to capture critical corner-case test scenarios. Simulation-based testing properly complements conventional on-road testing. However, due to the large space of test input parameters in these systems, the efficient generation of effective test scenarios leading to the unveiling of failures is a challenge. This paper presents a study on testing pedestrian detection and emergency braking system of the Baidu Apollo autonomous driving platform within the SVL simulator. We propose an evolutionary automated test generation technique that generates failure-revealing scenarios for Apollo in the SVL environment. Our approach models the input space using a generic and flexible data structure and benefits a multi-criteria safety-based heuristic for the objective function targeted for optimization. This paper presents the results of our proposed test generation technique in the 2021 IEEE Autonomous Driving AI Test Challenge. In order to demonstrate the efficiency and effectiveness of our approach, we also report the results from a baseline random generation technique. Our evaluation shows that the proposed evolutionary test case generator is more effective at generating failure-revealing test cases and provides higher diversity between the generated failures than the random baseline.",
    "citation_count": 25,
    "summary": "This paper presents an evolutionary algorithm for generating effective test cases for pedestrian detection in Baidu Apollo's autonomous driving system, simulated using SVL, demonstrating superior performance compared to random test case generation in uncovering system failures. The approach uses a multi-criteria safety-based heuristic to optimize the search for failure-revealing scenarios."
  },
  {
    "title": "Achieving weight coverage for an autonomous driving system with search-based test generation (HOP track at GECCO 2021)",
    "abstract": "Autonomous Driving Systems (ADSs) are complex critical systems that must be thoroughly tested. Still, assessing the strength of tests for ADSs is an open and complex problem. Weight Coverage is a test criterion targeting ADSs which are based on a weighted cost function. It measures how much each weight, related to different aspects of the ADS's decision process, is involved in the decisions taken in a test scenario. All weights/aspects should be involved for a strong test suite. Although weight coverage can measure the quality of a test suite, it does not provide clear guidance for test generation. This work proposes weight coverage-driven search-based test generation for ADSs. It describes and compares three designs of the search process: a single-objective search aiming at generating a test covering a single weight; a multi-objective search where each objective targets a different weight; and a single-objective search where the fitness function is an aggregate function representing the coverage over multiple weights. Experiments using an ADS system provided by our industry partner show the validity of the method and provide insights into the benefits of each search design. This Hot-off-the-Press paper summarises the paper [2]: T. Laurent, P. Arcaini, F. Ishikawa and A. Ventresque, \"Achieving Weight Coverage for an Autonomous Driving System with Search-based Test Generation\", 25th International Conference on Engineering of Complex Computer Systems (ICECCS 2020).",
    "published_date": "2021-07-07",
    "url": "https://dl.acm.org/doi/10.1145/3449726.3462723",
    "summary": "This paper presents a search-based test generation method for autonomous driving systems (ADSs) that aims to achieve weight coverage, a criterion measuring the involvement of different aspects in the ADS's decision process. Three search designs—single-objective, multi-objective, and aggregate—are compared experimentally, demonstrating the validity of the approach and offering insights into each design's effectiveness."
  },
  {
    "url": "https://arxiv.org/abs/2406.15777",
    "title": "ISS-Scenario: Scenario-based Testing in CARLA",
    "published_date": "2024-06-22",
    "abstract": "The rapidly evolving field of autonomous driving systems (ADSs) is full of promise. However, in order to fulfil these promises, ADSs need to be safe in all circumstances. This paper introduces ISS-Scenario, an autonomous driving testing framework in the paradigm of scenario-based testing. ISS-Scenario is designed for batch testing, exploration of test cases (e.g., potentially dangerous scenarios), and performance evaluation of autonomous vehicles (AVs). ISS-Scenario includes a diverse simulation scenario library with parametrized design. Furthermore, ISS-Scenario integrates two testing methods within the framework: random sampling and optimized search by means of a genetic algorithm. Finally, ISS-Scenario provides an accident replay feature, saving a log file for each test case which allows developers to replay and dissect scenarios where the ADS showed problematic behavior.",
    "summary": "ISS-Scenario is a CARLA-based framework for scenario-based testing of autonomous vehicles, employing both random sampling and genetic algorithm optimization to explore and evaluate diverse, parameterized scenarios, including accident replay for detailed analysis."
  },
  {
    "url": "https://arxiv.org/abs/2210.10304",
    "title": "Synthesizing Reactive Test Environments for Autonomous Systems: Testing Reach-Avoid Specifications with Multi-Commodity Flows",
    "published_date": "2022-10-19",
    "abstract": "We study automated test generation for testing discrete decision-making modules in autonomous systems. Linear temporal logic is used to encode the system specification - requirements of the system under test - and the test specification, which is unknown to the system and describes the desired test behavior. The reactive test synthesis problem is to find constraints on system actions such that in a test execution, both the system and test specifications are satisfied. To do this, we use the specifications and their corresponding Büchi automata to construct the specification product automaton. Then, a virtual product graph representing all possible test executions of the system is constructed from the transition system and the specification product automaton. The main result of this paper is framing the test synthesis problem as a multi-commodity network flow optimization. This optimization is used to derive reactive constraints on system actions, which constitute the test environment. The resulting test environment ensures that the system meets the test specification while also satisfying the system specification. We illustrate this framework in simulation using grid world examples and demonstrate it on hardware with the Unitree A1 quadruped, where we test dynamic locomotion behaviors reactively.",
    "citation_count": 2,
    "summary": "This paper presents a novel method for automated test generation of autonomous systems, framing the reactive test synthesis problem as a multi-commodity network flow optimization to ensure both system and test specifications are met during execution, demonstrated through simulations and hardware testing on a quadruped robot."
  },
  {
    "url": "https://www.lesswrong.com/posts/d9MkMeLWvoDEsqpQP/a-compilation-of-misuses-of-statistics",
    "author": "Younes Kamel",
    "title": "A compilation of misuses of statistics",
    "published_date": "2022-02-14",
    "summary": "The article highlights common statistical errors, primarily the misuse of Gaussian assumptions for non-Gaussian data and misinterpretations of p-values, leading to flawed conclusions in fields like finance and science. It emphasizes the importance of considering factors like base rates and statistical power to avoid inaccurate results and \"truth inflation.\""
  }
]