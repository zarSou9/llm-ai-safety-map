[
  {
    "url": "https://arxiv.org/abs/2411.19854",
    "title": "Timely and Energy-Efficient Multi-Step Update Processing",
    "published_date": "2024-11-29",
    "abstract": "This work explores systems where source updates require multiple sequential processing steps. We model and analyze the Age of Information (AoI) performance of various system designs under both parallel and series server setups. In parallel setups, each processor executes all computation steps with multiple processors working in parallel, while in series setups, each processor performs a specific step in sequence. In practice, processing faster is better in terms of age but it also consumes more power. We identify the occurrence of wasted power in these setups, which arises when processing efforts do not lead to a reduction in age. This happens when a fresher update finishes first in parallel servers or when a server preempts processing due to a fresher update from preceding server in series setups. To address this age-power trade-off, we formulate and solve an optimization problem to determine the optimal service rates for each processing step under a given power budget. We focus on a special case where updates require two computational steps.",
    "summary": "This paper analyzes the age of information (AoI) in multi-step update processing systems, modeling parallel and series server architectures to optimize processing rates and minimize wasted energy by balancing processing speed with power consumption. The authors formulate and solve an optimization problem to find optimal service rates under a power budget, focusing on two-step updates."
  },
  {
    "url": "http://arxiv.org/abs/2401.05525",
    "title": "Towards Safe Load Balancing based on Control Barrier Functions and Deep Reinforcement Learning",
    "published_date": "2024-01-10",
    "abstract": "Deep Reinforcement Learning (DRL) algorithms have recently made significant strides in improving network performance. Nonetheless, their practical use is still limited in the absence of safe exploration and safe decision-making. In the context of commercial solutions, reliable and safe-to-operate systems are of paramount importance. Taking this problem into account, we propose a safe learning-based load balancing algorithm for Software Defined-Wide Area Network (SD-WAN), which is empowered by Deep Reinforcement Learning (DRL) combined with a Control Barrier Function (CBF). It safely projects unsafe actions into feasible ones during both training and testing, and it guides learning towards safe policies. We successfully implemented the solution on GPU to accelerate training by approximately 110x times and achieve model updates for on-policy methods within a few seconds, making the solution practical. We show that our approach delivers near-optimal Quality-of-Service (QoS) performance in terms of end-to-end delay while respecting safety requirements related to link capacity constraints. We also demonstrated that on-policy learning based on Proximal Policy Optimization (PPO) performs better than off-policy learning with Deep Deterministic Policy Gradient (DDPG) when both are combined with a CBF for safe load balancing.",
    "citation_count": 1,
    "summary": "This paper presents a safe load balancing algorithm for SD-WANs that combines deep reinforcement learning with control barrier functions, ensuring safe exploration and decision-making while achieving near-optimal QoS performance and significantly accelerating training through GPU implementation. The study finds on-policy learning (PPO) superior to off-policy learning (DDPG) in this context."
  },
  {
    "url": "https://www.lesswrong.com/tag/knuths-up-arrow-notation",
    "title": "Knuth's Up-Arrow Notation - LessWrong",
    "published_date": "2024-02-01",
    "summary": "Knuth's up-arrow notation provides a concise way to represent extremely large numbers, as demonstrated by 3^^^3, a power tower of threes so high that its base-10 representation would require far more space than exists atoms in the universe, despite being easily describable."
  },
  {
    "url": "https://arxiv.org/abs/2308.08168",
    "title": "Emergent Software Service Platform and its Application in a Smart Mobility Setting",
    "published_date": "2023-08-16",
    "abstract": "The development dynamics of digital innovations for industry, business, and society are producing complex system conglomerates that can no longer be designed centrally and hierarchically in classic development processes. Instead, systems are evolving in DevOps processes in which heterogeneous actors act together on an open platform. Influencing and controlling such dynamically and autonomously changing system landscapes is currently a major challenge and a fundamental interest of service users and providers, as well as operators of the platform infrastructures. In this paper, we propose an architecture for such an emergent software service platform. A software platform that implements this architecture with the underlying engineering methodology is demonstrated by a smart parking lot scenario.",
    "citation_count": 1,
    "summary": "This paper presents an architecture for an emergent software service platform designed to manage complex, dynamically evolving systems built through decentralized DevOps processes. A smart parking lot scenario demonstrates the platform's implementation and capabilities."
  },
  {
    "url": "https://www.lesswrong.com/posts/g5XLHKyApAFXi3fso/president-biden-issues-executive-order-on-safe-secure-and",
    "author": "Tristan Williams",
    "title": "President Biden Issues Executive Order on Safe, Secure, and Trustworthy Artificial Intelligence",
    "published_date": "2023-10-30",
    "summary": "The U.S. government issued a sweeping executive order addressing AI risks, mandating safety testing transparency for powerful AI systems, developing safety standards and tools, and establishing international collaborations to manage AI risks. The order also includes provisions to mitigate AI-related fraud, discrimination, and misuse in various sectors like healthcare and criminal justice."
  },
  {
    "url": "https://arxiv.org/abs/2209.06152",
    "title": "Mandator and Sporades: Robust Wide-Area Consensus with Efficient Request Dissemination",
    "published_date": "2022-09-13",
    "abstract": "Consensus algorithms are deployed in the wide area to achieve high availability for geographically replicated applications. Wide-area consensus is challenging due to two main reasons: (1) low throughput due to the high latency overhead of client request dissemination and (2) network asynchrony that causes consensus protocols to lose liveness. In this pa-per, we propose Mandator and Sporades , a modular state machine replication algorithm that enables high performance and resiliency in the wide-area setting. To address the high client request dissemination overhead challenge, we propose Mandator , a novel consensus-agnostic asynchronous dissemination layer. Mandator sepa-rates client request dissemination from the critical path of consensus to obtain high performance. Composing Mandator with Multi-Paxos (Mandator-Paxos) delivers signiﬁcantly high throughput under synchronous networks. However, under asynchronous network conditions, Mandator-Paxos loses liveness which results in high latency. To achieve low latency and robustness under asynchrony, we propose Sporades , a novel omission fault-tolerant consensus algorithm. Sporades consists of two modes of operations – synchronous and asynchronous – that always ensure liveness. Sporades leverages the synchronous network to minimize the communication cost to O ( n ) and matches the lower bound of O ( n 2 ) at worse-case executions. The combination of Mandator and Sporades (Mandator-Sporades) provides a robust and high-performing state machine replication system. We implement and evaluate Mandator-Sporades in a wide-area deployment running on Amazon EC2. Our evaluation shows that in the synchronous execution, Mandator-Sporades achieves 300k tx/sec throughput in less than 900ms latency, outperforming Multi-Paxos, EPaxos and Rabia by 650% in throughput, at a modest expense of latency. Furthermore, we show that Mandator-Sporades outperforms Mandator-Paxos, Multi-Paxos, and EPaxos in the face of targeted distributed denial-of-service attacks.",
    "citation_count": 1,
    "summary": "Mandator and Sporades is a high-performance, fault-tolerant state machine replication algorithm for wide-area deployments, achieving this through a novel asynchronous dissemination layer (Mandator) and a dual-mode consensus algorithm (Sporades) that maintains liveness under both synchronous and asynchronous network conditions. The combined system significantly outperforms existing solutions in throughput and resilience against attacks."
  },
  {
    "url": "https://arxiv.org/abs/2211.03716",
    "title": "The augmentation-speed tradeoff for consistent network updates",
    "published_date": "2022-10-19",
    "abstract": "Emerging software-defined networking technologies enable more adaptive communication infrastructures, allowing for quick reactions to changes in networking requirements by exploiting the workload's temporal structure. However, operating networks adaptively is algorithmically challenging, as meeting networks' stringent dependability requirements relies on maintaining basic consistency and performance properties, such as loop freedom and congestion minimization, even during the update process. This paper leverages an augmentation-speed tradeoff to significantly speed up consistent network updates. We show that allowing for a small and short (hence practically tolerable, e.g., using buffering) oversubscription of links allows us to solve many network update instances much faster, as well as to reduce computational complexities (i.e., the running times of the algorithms). We first explore this tradeoff formally, revealing the computational complexity of scheduling updates. We then present and analyze algorithms that maintain logical and performance properties during the update. Using an extensive simulation study, we find that the tradeoff is even more favorable in practice than our analytical bounds suggest. In particular, we find that by allowing just 10% augmentation, update times reduce by more than 32% on average, across a spectrum of real-world networks.",
    "summary": "This paper explores a speed-augmentation tradeoff for consistent network updates in software-defined networks, showing that allowing temporary link oversubscription significantly reduces update times and computational complexity, with simulations demonstrating a 32% average reduction in update time using only 10% augmentation."
  },
  {
    "url": "https://arxiv.org/pdf/2106.01154.pdf",
    "title": "Controlled Update of Software Components using Concurrent Exection of Patched and Unpatched Versions",
    "published_date": "2021-06-02",
    "abstract": "Software patching is a common method of removing vulnerabilities in software components to make IT systems more secure. However, there are many cases where software patching is not possible due to the critical nature of the application, especially when the vendor providing the application guarantees correct operation only in a specific configuration. In this paper, we propose a method to solve this problem. The idea is to run unpatched and patched application instances concurrently, with the unpatched one having complete control and the output of the patched one being used only for comparison, to watch for differences that are consequences of introduced bugs. To test this idea, we developed a system that allows us to run web applications in parallel and tested three web applications. The experiments have shown that the idea is promising for web applications from the technical side. Furthermore, we discuss the potential limitations of this system and the idea in general, how long two instances should run in order to be able to claim with some probability that the patched version has not introduced any new bugs, other potential use cases of the proposed system where two application instances run concurrently, and finally the potential uses of this system with different types of applications, such as SCADA systems.",
    "summary": "This paper proposes a method for safely updating software components by concurrently running patched and unpatched versions, using the unpatched version as the primary system and comparing outputs to detect regressions introduced by the patch. Experiments with web applications demonstrate the technical feasibility of this approach."
  },
  {
    "url": "https://arxiv.org/abs/2101.00397",
    "title": "Early Work on Efficient Patching for Coordinating Edge Applications",
    "published_date": "2021-01-02",
    "abstract": "Multiple applications running on Edge computers can be orchestrated to achieve the desired goal. Orchestration of applications is prominent when working with Internet of Things based applications, Autonomous driving and Autonomous Aerial vehicles. As the applications receive modified classifiers/code, there will be multiple applications that need to be updated. If all the classifiers are synchronously updated there would be increased throughput and bandwidth degradation. On the other hand, delaying updates of applications which need immediate update hinders performance and delays progress towards end goal. The updates of applications should be prioritized and updates should happen according to this priority. This paper explores the setup and benchmarks to understand the impact of updates when multiple applications working to achieve same objective are orchestrated with prioritized updates. We discuss methods to build a distributed, reliable and scalable system called\"DSOC\"(Docker Swarm Orchestration Component).",
    "summary": "This paper investigates efficient patching strategies for coordinating multiple edge applications, focusing on prioritized asynchronous updates to minimize bandwidth consumption and performance degradation in scenarios like IoT, autonomous driving, and UAVs. It introduces a distributed, reliable, and scalable system (\"DSOC\") for managing these updates."
  },
  {
    "url": "https://arxiv.org/pdf/2108.09555v1.pdf",
    "title": "Reliable firmware updates for the information-centric internet of things",
    "published_date": "2021-08-21",
    "abstract": "Security in the Internet of Things (IoT) requires ways to regularly update firmware in the field. These demands ever increase with new, agile concepts such as security as code and should be considered a regular operation. Hosting massive firmware roll-outs present a crucial challenge for the constrained wireless environment. In this paper, we explore how information-centric networking can ease reliable firmware updates. We start from the recent standards developed by the IETF SUIT working group and contribute a system that allows for a timely discovery of new firmware versions by using cryptographically protected manifest files. Our design enables a cascading firmware roll-out from a gateway towards leaf nodes in a low-power multi-hop network. While a chunking mechanism prepares firmware images for typically low-sized maximum transmission units (MTUs), an early Denial-of-Service (DoS) detection prevents the distribution of tampered or malformed chunks. In experimental evaluations on a real-world IoT testbed, we demonstrate feasible strategies with adaptive bandwidth consumption and a high resilience to connectivity loss when replicating firmware images into the IoT edge.",
    "citation_count": 4,
    "summary": "This paper proposes a system using information-centric networking to improve reliable firmware updates in resource-constrained IoT environments, employing cryptographically secured manifests, a cascading roll-out strategy, and DoS detection to ensure timely and secure updates even with high connectivity loss."
  }
]