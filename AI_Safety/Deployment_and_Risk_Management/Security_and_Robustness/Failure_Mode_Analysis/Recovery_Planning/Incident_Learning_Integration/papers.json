[
  {
    "url": "https://www.lesswrong.com/posts/cCcCJnvMEHqrgiCnx/practical-use-of-the-beta-distribution-for-data-analysis",
    "author": "Maxwell Peterson",
    "title": "Practical use of the Beta distribution for data analysis",
    "published_date": "2022-04-03"
  },
  {
    "url": "https://www.lesswrong.com/posts/d9MkMeLWvoDEsqpQP/a-compilation-of-misuses-of-statistics",
    "author": "Younes Kamel",
    "title": "A compilation of misuses of statistics",
    "published_date": "2022-02-14"
  },
  {
    "title": "IS incident recovery and service value: a service-dominant logic view",
    "abstract": "ABSTRACT IS service delivery failures inside companies are value diminishing events. Information systems service providers seek to limit this value destruction but lack guidance on IS incident resolution actions that satisfy users and preserve IS service value. We apply Service-Dominant Logic (SDL) to explore what is relevant to users' recovery service experiences while interacting with IS service providers. We use an integrated research approach including qualitative and quantitative data. We uncover actions that lead to a satisfying incident recovery and categorise them into three recovery components (responsive handling interactions, supportive communicating interactions, and effective resolving actions) that reflect IS provider resource exchanges of information, knowledge, and service skills with users in resolving incidents. We integrate these three recovery components as factors in our research model and test direct and moderating effects on value outcomes. We find that users' recovery satisfaction results from both a “fix it fast and fully” perspective and a sense of effort and fairness conveyed. Results point to managers preserving overall IS service satisfaction and service quality by facilitating proper resource exchanges during an incident recovery.",
    "published_date": "2021-01-16",
    "citation_count": 2,
    "url": "https://www.tandfonline.com/doi/full/10.1080/0960085X.2020.1869915"
  },
  {
    "url": "https://www.lesswrong.com/posts/jqfANkNduyEQC9hvr/five-whys",
    "author": "lynettebye",
    "title": "Five Whys",
    "published_date": "2021-06-07"
  },
  {
    "title": "A Framework for Automatic Failure Recovery in ICT Systems by Deep Reinforcement Learning",
    "abstract": "Because automatic recovery from failures is of great importance for future operations of ICT systems, we propose a framework for learning a recovery policy using deep reinforcement learning. In our framework, while iteratively trying various recovery actions and observing system metrics in a target system, an agent autonomously learns the optimal recovery policy, which indicates what recovery action should be executed on the basis of observations. By using failure injection tools designed for Chaos Engineering, we can reproduce many types of failures in the target system, thereby making the agent learn a recovery policy applicable to various failures. Once the recovery policy is obtained, we can automate failure recovery by executing recovery actions that the recovery policy returns. Unlike most previous methods, our framework does not require any historical documents of failure recovery or modeling of system behavior. To verify the feasibility of the framework, we conducted an experiment using a container-based environment built on a Kubernetes cluster, demonstrating that training converges in a few days and the obtained recovery policy can successfully recover from failures with a minimum number of recovery actions.",
    "published_date": "2020-11-01",
    "citation_count": 6,
    "url": "https://ieeexplore.ieee.org/document/9355699/"
  },
  {
    "title": "Efficient customer incident triage via linking with system incidents",
    "abstract": "In cloud service systems, customers will report the service issues they have encountered to cloud service providers. Despite many issues can be handled by the support team, sometimes the customer issues can not be easily solved, thus raising customer incidents. Quick troubleshooting of a customer incident is critical. To this end, a customer incident should be assigned to its responsible team accurately in a timely manner. Our industrial experiences show that linking customer incidents with detected system incidents can help the customer incident triage. In particular, our empirical study on 7 real cloud service systems shows that with the additional information about the system incidents (i.e., incident reports generated by system monitors), the triage time of customer incidents can be accelerated 13.1× on average. Based on this observation, in this paper, we propose LinkCM, a learning based approach to automatically link customer incidents to monitor reported system incidents. LinkCM incorporates a novel learning-based model that effectively extracts related information from two resources, and a transfer learning strategy is proposed to help LinkCM achieve better performance without huge amount of data. The experimental results indicate that LinkCM is able to achieve accurate link prediction. Furthermore, case studies are presented to demonstrate how LinkCM can help the customer incident triage procedure in real production cloud service systems.",
    "published_date": "2020-11-07",
    "citation_count": 14,
    "url": "https://dl.acm.org/doi/10.1145/3368089.3417061"
  }
]