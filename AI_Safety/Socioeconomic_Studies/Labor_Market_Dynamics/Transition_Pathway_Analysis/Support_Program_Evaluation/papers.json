[
  {
    "url": "https://arxiv.org/pdf/2301.10023.pdf",
    "title": "Discovering Transition Pathways Towards Coviability with Machine Learning",
    "published_date": "2023-01-06",
    "abstract": "Coviability refers to the multiple socio-ecological arrange- ments and governance structures under which humans and nature can coexist in functional, fair, and persistent ways. Transitioning to a coviable state in environmentally degraded and socially vulnerable territories is challenging. This paper presents an ongoing French-Brazilian joint research project combining machine learning, agroecology, and social sci- ences to discover coviability pathways that can be adopted and implemented by local populations in the North-East re- gion of Brazil.",
    "citation_count": 1,
    "summary": "This research project uses machine learning to identify potential pathways towards coviability—the sustainable coexistence of humans and nature—in environmentally degraded regions of Northeast Brazil, integrating agroecological and social science perspectives. The goal is to discover actionable strategies for local populations."
  },
  {
    "url": "https://arxiv.org/pdf/2104.00390.pdf",
    "title": "Facing the Giant: a Grounded Theory Study of Decision-Making in Microservices Migrations",
    "published_date": "2021-04-01",
    "abstract": "Background: Microservices migrations are challenging and expensive projects with many decisions that need to be made in a multitude of dimensions. Existing research tends to focus on technical issues and decisions (e.g., how to split services). Equally important organizational or business issues and their relations with technical aspects often remain out of scope or on a high level of abstraction. Aims: In this study, we aim to holistically chart the decision-making that happens on all dimensions of a migration project towards microservices (including, but not limited to, the technical dimension). Method: We investigate 16 different migration cases in a grounded theory interview study, with 19 participants that recently migrated towards microservices. This study strongly focuses on the human aspects of a migration, through stakeholders and their decisions. Results: We identify 3 decision-making processes consisting of 22 decision-points and their alternative options. The decision-points are related to creating stakeholder engagement and assessing feasibility, technical implementation, and organizational restructuring. Conclusions: Our study provides an initial theory of decisionmaking in migrations to microservices. It also outfits practitioners with a roadmap of which decisions they should be prepared to make and at which point in the migration.",
    "citation_count": 17,
    "summary": "This grounded theory study identifies three key decision-making processes, encompassing 22 decision points, involved in microservices migrations, emphasizing the interplay of technical, organizational, and stakeholder considerations. The resulting framework provides a roadmap for practitioners navigating the complexities of such projects."
  },
  {
    "title": "Expert Perspectives on Service User Transitions Within and From Homeless Service Programs",
    "abstract": "Abstract This study describes expert perspectives on service user transitions within and from homeless service programs. Semi-structured qualitative interviews were conducted with subject matter experts (SMEs) who had practice or research experience regarding transitional supports in homeless services. Interviews were analyzed using rapid assessment procedures that allowed for the categorization and characterization of targeted interview domains. Findings indicate that assessment is a critical, but underspecified, aspect of transitional programs in homeless services. SMEs viewed assessments for transition readiness as goal-setting opportunities and said that frequency of assessment is best individualized to the person. Transitional supports, including housing navigation and peer support, were viewed as important elements of successful programs. SMEs further noted that opportunities for eventual transition from the program should be communicated to service users early on and that having an organizational culture that embraces service user transitions was critical, highlighting the importance of shifting culture around transitions in homeless services.",
    "published_date": "2020-10-27",
    "citation_count": 3,
    "url": "https://www.tandfonline.com/doi/full/10.1080/10511482.2020.1825012",
    "summary": "Experts in homeless services highlight the crucial, yet often underdeveloped, role of individualized assessments in facilitating successful transitions for service users. Successful programs incorporate housing navigation, peer support, early communication of transition plans, and a supportive organizational culture."
  },
  {
    "url": "https://arxiv.org/pdf/2010.06390v1.pdf",
    "title": "Escalation Prediction using Feature Engineering: Addressing Support Ticket Escalations within IBM's Ecosystem",
    "published_date": "2020-10-12",
    "abstract": "Large software organizations handle many customer support issues every day in the form of bug reports, feature requests, and general misunderstandings as submitted by customers. Strategies to gather, analyze, and negotiate requirements are complemented by efforts to manage customer input after products have been deployed. For the latter, support tickets are key in allowing customers to submit their issues, bug reports, and feature requests. Whenever insufficient attention is given to support issues, there is a chance customers will escalate their issues, and escalation to management is time-consuming and expensive, especially for large organizations managing hundreds of customers and thousands of support tickets. This thesis provides a step towards simplifying the job for support analysts and managers, particularly in predicting the risk of escalating support tickets. In a field study at our large industrial partner, IBM, a design science methodology was employed to characterize the support process and data available to IBM analysts in managing escalations. Through iterative cycles of design and evaluation, support analysts' expert knowledge about their customers was translated into features of a support ticket model to be implemented into a Machine Learning model to predict support ticket escalations. The Machine Learning model was trained and evaluated on over 2.5 million support tickets and 10,000 escalations, obtaining a recall of 79.9% and an 80.8% reduction in the workload for support analysts looking to identify support tickets at risk of escalation. The features developed in the Support Ticket Model are designed to serve as a starting place for organizations interested in implementing the model to predict support ticket escalations, and for future researchers to build on to advance research in Escalation Prediction.",
    "summary": "This paper presents a machine learning model, trained on over 2.5 million IBM support tickets, that predicts support ticket escalations with 79.9% recall, significantly reducing analyst workload by 80.8%. The model leverages feature engineering based on expert analyst knowledge to identify high-risk tickets."
  },
  {
    "url": "https://arxiv.org/pdf/2104.05199.pdf",
    "title": "Continuous Transition in Outsourcing: A Case Study",
    "published_date": "2017-05-20",
    "abstract": "Outsourcing is typically considered to occur in three phases: decision, transition and operation. As outsourcing is now well established the switching of vendors and transitioning from one system to another is common. However, most of the research to date on outsourcing has focused on the decision and operation phases, leaving a gap between theory and practice concerning the transition phase. Transition in outsourcing entails the changing of systems, business processes and/or vendors. If a suitable transition approach is not applied pressures for another transition can immediately build. This paper presents results from a case study carried out on the 'Novopay Project' in which the Ministry of Education in New Zealand changed their vendor from an onshore to a near-shore provider. This project resulted in a sequence of three transitions, with each following a different approach as a direct result of the experiences encountered in the previous transition. In this research we made use of the rich 'data dump' of evidence provided by the Ministry of Education (MoE). Our analysis describes how a client organization can become trapped in a continuous transition cycle if a suitable approach is not applied. Transition1 involved the client – MoE – moving from complete outsourcing to selective insourcing. After realizing that they did not have the capabilities to manage insourcing, Transition2 was initiated. In Transition2 the sourcing approach reverted back to complete outsourcing. When it was realized that the new vendor in Transition2 could not in fact deliver a new service model or support end-users in following new business processes, Transition3 was initiated. In Transition3, the client established an internal company to insource service operations to support end-users. Transition can be a sound business strategy initiated for a range of reasons. However, if a flawed sourcing approach is chosen it can result in 'continuous transition'.",
    "citation_count": 2,
    "summary": "This case study of New Zealand's Novopay project reveals how inadequate transition planning in outsourcing can lead to a continuous cycle of transitions between different sourcing models (outsourcing, insourcing), highlighting the critical need for a suitable approach to avoid such pitfalls. The study analyzes three consecutive transitions, each resulting from flaws in the preceding one, demonstrating the consequences of poor vendor selection and insufficient internal capabilities."
  },
  {
    "url": "https://arxiv.org/pdf/2307.13089.pdf",
    "title": "A conceptual framework for SPI evaluation",
    "published_date": "2014-02-01",
    "abstract": "Software Process Improvement (SPI) encompasses the analysis and modification of the processes within software development, aimed at improving key areas that contribute to the organizations' goals. The task of evaluating whether the selected improvement path meets these goals is challenging. On the basis of the results of a systematic literature review on SPI measurement and evaluation practices, we developed a framework (SPI Measurement and Evaluation Framework (SPI‐MEF)) that supports the planning and implementation of SPI evaluations. SPI‐MEF guides the practitioner in scoping the evaluation, determining measures, and performing the assessment. SPI‐MEF does not assume a specific approach to process improvement and can be integrated in existing measurement programs, refocusing the assessment on evaluating the improvement initiative's outcome. Sixteen industry and academic experts evaluated the framework's usability and capability to support practitioners, providing additional insights that were integrated in the application guidelines of the framework. Copyright © 2013 John Wiley & Sons, Ltd.",
    "citation_count": 12,
    "summary": "This paper presents the SPI Measurement and Evaluation Framework (SPI-MEF), a tool designed to guide the evaluation of Software Process Improvement (SPI) initiatives by helping practitioners scope evaluations, select measures, and perform assessments, regardless of the specific improvement approach used. The framework's usability was validated through expert review."
  },
  {
    "url": "https://arxiv.org/pdf/2102.09088.pdf",
    "title": "Investigating a conceptual construct for software context",
    "published_date": "2014-05-13",
    "abstract": "A growing number of empirical software engineering researchers suggest that a complementary focus on theory is required if the discipline is to mature. A first step in theory-building involves the establishment of suitable theoretical constructs. For researchers studying software projects, the lack of a theoretical construct for context is problematic for both experimentation and effort estimation. For experiments, insufficiently understood contextual factors confound results, and for estimation, unstated contextual factors affect estimation reliability. We have earlier proposed a framework that we suggest may be suitable as a construct for context i.e. represents a minimal, spanning set for the space of software contexts. The framework has six dimensions, described as Who, Where, What, When, How and Why. In this paper, we report the outcomes of a pilot study to test its suitability by categorising contextual factors from the software engineering literature into the framework. We found that one of the dimensions, Why, does not represent context, but rather is associated with objectives. We also identified some factors that do not clearly fit into the framework and require further investigation. Our contributions are the pursuing of a theoretical approach to understanding software context, the initial establishment and evaluation of a construct for context and the exposure of a lack of clarity of meaning in many 'contexts' currently applied as factors for estimating project outcomes.",
    "citation_count": 16,
    "summary": "This paper investigates a six-dimensional framework (\"Who, Where, What, When, How, Why\") for conceptualizing software context, finding that the \"Why\" dimension represents objectives rather than context and that some contextual factors require further investigation. The study aims to improve the rigor of software engineering research and estimation by establishing a clearer theoretical construct for context."
  },
  {
    "url": "https://arxiv.org/pdf/1401.5183.pdf",
    "title": "Transition from Analysis to Software Design: A Review and New Perspective",
    "published_date": "2014-01-20",
    "abstract": "Analysis and design phases are the most crucial part of the software development life-cycle. Reusing the artifacts of these early phases is very beneficial to improve the productivity and software quality. In this paper we analyze the literature on the automatic transformation of artifacts from the problem space (i.e., requirement analysis models) into artifacts in the solution space (i.e., architecture, design and implementation code). The goal is to assess the current state of the art with regard to the ability of automatically reusing previously developed software designs in synthesizing a new design for a given requirement. We surveyed various related areas such as model-driven development and model transformation techniques. Our analysis revealed that this topic has not been satisfactorily covered yet. Accordingly, we propose a framework consists of three stages to address uncovered limitations in current approaches.",
    "citation_count": 8,
    "summary": "This paper reviews the literature on automatically transforming software requirement analysis models into design and code, finding current approaches inadequate. It proposes a three-stage framework to address these limitations and improve the reuse of existing software designs."
  }
]