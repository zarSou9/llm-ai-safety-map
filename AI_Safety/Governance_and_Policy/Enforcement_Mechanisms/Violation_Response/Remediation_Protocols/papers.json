[
  {
    "url": "https://arxiv.org/abs/2501.08933",
    "title": "Separation Assurance in Urban Air Mobility Systems using Shared Scheduling Protocols",
    "published_date": "2025-01-15",
    "abstract": "Ensuring safe separation between aircraft is a critical challenge in air traffic management, particularly in urban air mobility (UAM) environments where high traffic density and low altitudes require precise control. In these environments, conflicts often arise at the intersections of flight corridors, posing significant risks. We propose a tactical separation approach leveraging shared scheduling protocols, originally designed for Ethernet networks and operating systems, to coordinate access to these intersections. Using a decentralized Markov decision process framework, the proposed approach enables aircraft to autonomously adjust their speed and timing as they navigate these critical areas, maintaining safe separation without a central controller. We evaluate the effectiveness of this approach in simulated UAM scenarios, demonstrating its ability to reduce separation violations to zero while acknowledging trade-offs in flight times as traffic density increases. Additionally, we explore the impact of non-compliant aircraft, showing that while shared scheduling protocols can no longer guarantee safe separation, they still provide significant improvements over systems without scheduling protocols.",
    "summary": "This paper proposes a decentralized, shared scheduling protocol for ensuring safe separation in urban air mobility systems, using a Markov decision process to enable autonomous aircraft coordination at flight corridor intersections and significantly reducing separation violations even with non-compliant aircraft. The approach prioritizes safe separation, accepting increased flight times under high traffic density."
  },
  {
    "url": "http://arxiv.org/abs/2401.09678",
    "title": "Integrating Graceful Degradation and Recovery Through Requirement-Driven Adaptation",
    "published_date": "2024-01-18",
    "abstract": "Cyber-physical systems (CPS) are subject to environmental uncertainties such as adverse operating conditions, malicious attacks, and hardware degradation. These uncertainties may lead to failures that put the system in a sub-optimal or unsafe state. Systems that are resilient to such uncertainties rely on two types of operations: (1) graceful degradation, for ensuring that the system maintains an acceptable level of safety during unexpected environmental conditions and (2) recovery, to facilitate the resumption of normal system functions. Typically, mechanisms for degradation and recovery are developed independently from each other, and later integrated into a system, requiring the designer to develop an additional, ad-hoc logic for activating and coordinating between the two operations. In this paper, we propose a self-adaptation approach for improving system resiliency through automated triggering and coordination of graceful degradation and recovery. The key idea behind our approach is to treat degradation and recovery as requirement-driven adaptation tasks: Degradation can be thought of as temporarily weakening original (i.e., ideal) system requirements to be achieved by the system, and recovery as strengthening the weakened requirements when the environment returns within an expected operating boundary. Furthermore, by treating weakening and strengthening as dual operations, we argue that a single requirement-based adaptation method is sufficient to enable coordination between degradation and recovery. Given system requirements specified in signal temporal logic (STL), we propose a run-time adaptation framework that performs degradation and recovery in response to environmental changes. We describe a prototype implementation of our framework and demonstrate the feasibility of the proposed approach using a case study in unmanned underwater vehicles.",
    "summary": "This paper proposes a self-adaptation approach for improving cyber-physical system resilience by integrating graceful degradation and recovery as requirement-driven adaptation tasks, using signal temporal logic to automate their triggering and coordination based on environmental changes. A prototype implementation and case study demonstrate the feasibility of this unified approach."
  },
  {
    "url": "https://arxiv.org/pdf/2301.01487.pdf",
    "title": "Automated Misconfiguration Repair of Configurable Cyber-Physical Systems with Search: an Industrial Case Study on Elevator Dispatching Algorithms",
    "published_date": "2023-01-04",
    "abstract": "Real-world Cyber-Physical Systems (CPSs) are usually configurable. Through parameters, it is possible to configure, select or unselect different system functionalities. While this provides high flexibility, it also becomes a source for failures due to misconfigurations. The large number of parameters these systems have and the long test execution time in this context due to the use of simulation-based testing make the manual repair process a cumbersome activity. Subsequently, in this context, automated repairing methods are paramount. In this paper, we propose an approach to automatically repair CPSs' misconfigurations. Our approach is evaluated with an industrial CPS case study from the elevation domain. Experiments with a real building and data obtained from operation suggests that our approach outperforms a baseline algorithm as well as the state of the practice (i.e., manual repair carried out by domain experts).",
    "citation_count": 7,
    "summary": "This paper presents an automated approach for repairing misconfigurations in configurable Cyber-Physical Systems (CPS), demonstrated through an industrial case study on elevator dispatching algorithms, showing improved performance over manual repair and a baseline algorithm."
  },
  {
    "url": "https://www.lesswrong.com/posts/cCbybRT8bgiMbEHEv/a-list-of-all-the-deadlines-in-biden-s-executive-order-on-ai",
    "author": "Ricki Heicklen",
    "title": "Toward a Broader Conception of Adverse Selection",
    "published_date": "2023-11-01",
    "summary": "Biden's October 30, 2023 executive order on AI outlines numerous deadlines for federal agencies, ranging from 30 to 90 days, to produce reports, assessments, and plans related to AI development, workforce needs, risk management, and responsible use across various sectors. These actions aim to coordinate federal AI initiatives and address potential risks and ethical concerns."
  },
  {
    "url": "https://arxiv.org/pdf/2103.12919.pdf",
    "title": "Failure-Tolerant Contract-Based Design of an Automated Valet Parking System using a Directive-Response Architecture",
    "published_date": "2021-03-24",
    "abstract": "Increased complexity in cyber-physical systems calls for modular system design methodologies that guarantee correct and reliable behavior, both in normal operations and in the presence of failures. This paper aims to extend the contract-based design approach using a directive-response architecture to enable reactivity to failure scenarios. The architecture is demonstrated on a modular automated valet parking (AVP) system. The contracts for the different components in the AVP system are explicitly defined, implemented, and validated against a Python implementation.",
    "summary": "This paper presents a failure-tolerant design for an automated valet parking system using a contract-based approach with a directive-response architecture, demonstrating its implementation and validation through a Python model. The approach ensures reliable system behavior even during component failures."
  },
  {
    "url": "https://arxiv.org/pdf/2111.03322.pdf",
    "title": "Automatic Repair and Deadlock Detection for Parameterized Systems",
    "published_date": "2021-11-05",
    "abstract": "We present an algorithm for the repair of parameterized systems. The repair problem is, for a given process implementation, to find a refinement such that a given safety property is satisfied by the resulting parameterized system, and deadlocks are avoided. Our algorithm uses a parameterized model checker to determine the correctness of candidate solutions and employs a constraint system to rule out candidates. We apply this algorithm on systems that can be represented as well-structured transition systems (WSTS), including disjunctive systems, pairwise rendezvous systems, and broadcast protocols. Moreover, we show that parameterized deadlock detection can be decided in EXPTIME for disjunctive systems, and that deadlock detection is in general undecidable for broadcast protocols.",
    "citation_count": 3,
    "summary": "This paper introduces an algorithm that automatically repairs parameterized systems to satisfy safety properties and avoid deadlocks, utilizing a parameterized model checker and constraint system; its applicability and complexity are analyzed for various well-structured transition system models."
  },
  {
    "url": "https://arxiv.org/abs/2105.10668",
    "title": "Runtime Enforcement of Programmable Logic Controllers",
    "published_date": "2021-05-22",
    "abstract": "With the advent of Industry 4.0, industrial facilities and critical infrastructures are transforming into an ecosystem of heterogeneous physical and cyber components, such as programmable logic controllers, increasingly interconnected and therefore exposed to cyber-physical attacks, i.e., security breaches in cyberspace that may adversely affect the physical processes underlying industrial control systems. In this paper, we propose a formal approach based on runtime enforcement to ensure specification compliance in networks of controllers, possibly compromised by colluding malware that may tamper with actuator commands, sensor readings, and inter-controller communications. Our approach relies on an ad-hoc sub-class of Ligatti et al.'s edit automata to enforce controllers represented in Hennessy and Regan's Timed Process Language. We define a synthesis algorithm that, given an alphabet $P$ of observable actions and a timed correctness property $e$, returns a monitor that enforces the property $e$ during the execution of any (potentially corrupted) controller with alphabet $P$, and complying with the property $e$. Our monitors correct and suppress incorrect actions coming from corrupted controllers and emit actions in full autonomy when the controller under scrutiny is not able to do so in a correct manner. Besides classical requirements, such as transparency and soundness, the proposed enforcement enjoys deadlock- and diverge-freedom of monitored controllers, together with scalability when dealing with networks of controllers. Finally, we test the proposed enforcement mechanism on a non-trivial case study, taken from the context of industrial water treatment systems, in which the controllers are injected with different malware with different malicious goals.",
    "summary": "This paper presents a runtime enforcement mechanism for programmable logic controllers (PLCs) in industrial control systems, using a novel synthesis algorithm based on edit automata to ensure compliance with timed correctness properties even under malicious attacks. The approach corrects or suppresses incorrect PLC actions, guaranteeing deadlock- and divergence-freedom while maintaining scalability for networks of controllers."
  },
  {
    "url": "https://arxiv.org/pdf/2104.04299v1.pdf",
    "title": "Privacy-Preserving Supervisory Control of Discrete-Event Systems via Co-Synthesis of Edit Function and Supervisor for Opacity Enforcement and Requirement Satisfaction",
    "published_date": "2021-04-09",
    "abstract": "This paper investigates the problem of co-synthesis of edit function and supervisor for opacity enforcement in the supervisory control of discrete-event systems (DES), assuming the presence of an external (passive) intruder, where the following goals need to be achieved: 1) the external intruder should never infer the system secret, i.e., the system is opaque, and never be sure about the existence of the edit function, i.e., the edit function remains covert; 2) the controlled plant behaviors should satisfy some safety and nonblockingness requirements, in the presence of the edit function. We focus on the class of edit functions that satisfy the following properties: 1) the observation capability of the edit function in general can be different from those of the supervisor and the intruder; 2) the edit function can implement insertion, deletion, and replacement operations; 3) the edit function performs bounded edit operations, i.e., the length of each string output of the edit function is upper bounded by a given constant. We propose an approach to solve this cosynthesis problem by modeling it as a distributed supervisor synthesis problem in the Ramadge-Wonham supervisory control framework. By taking the special structure of this distributed supervisor synthesis problem into consideration and to improve the possibility of finding a non-empty distributed supervisor, we propose two novel synthesis heuristics that incrementally synthesize the supervisor and the edit function. The effectiveness of our approach is illustrated on an example in the enforcement of the location privacy.",
    "citation_count": 1,
    "summary": "This paper presents a co-synthesis method for an edit function and supervisor in discrete-event systems to ensure system opacity (preventing secret inference by an intruder) while maintaining safety and nonblockingness requirements. The approach models the problem as a distributed supervisory control problem and utilizes novel heuristics to improve the likelihood of finding a solution."
  }
]