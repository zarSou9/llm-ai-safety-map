[
  {
    "url": "https://arxiv.org/abs/2408.12539",
    "title": "LOUD: Synthesizing Strongest and Weakest Specifications",
    "published_date": "2024-08-22",
    "abstract": "Specifications allow us to formally state and understand what programs are intended to do. To help one extract useful properties from code, Park et al. recently proposed a framework that given (i) a quantifier-free query posed about a set of function definitions, and (ii) a domain-specific language L in which each extracted property is to be expressed (we call properties in the language L-properties), synthesizes a set of L-properties such that each of the property is a strongest L-consequence for the query: the property is an over-approximation of query and there is no other L-property that over-approximates query and is strictly more precise than each property. The framework by Park et al. has two key limitations. First, it only supports quantifier-free query formulas and thus cannot synthesize specifications for queries involving nondeterminism, concurrency, etc. Second, it can only compute L-consequences, i.e., over-approximations of the program behavior. This paper addresses these two limitations and presents a framework, Loud, for synthesizing strongest L-consequences and weakest L-implicants (i.e., under-approximations of the query) for function definitions that can involve existential quantifiers. We implemented a solver, Aspire, for problems expressed in Loud which can be used to describe and identify sources of bugs in both deterministic and nondeterministic programs, extract properties from concurrent programs, and synthesize winning strategies in two-player games."
  },
  {
    "url": "https://arxiv.org/abs/2405.06399",
    "title": "Program Synthesis using Inductive Logic Programming for the Abstraction and Reasoning Corpus",
    "published_date": "2024-05-10",
    "abstract": "The Abstraction and Reasoning Corpus (ARC) is a general artificial intelligence benchmark that is currently unsolvable by any Machine Learning method, including Large Language Models (LLMs). It demands strong generalization and reasoning capabilities which are known to be weaknesses of Neural Network based systems. In this work, we propose a Program Synthesis system that uses Inductive Logic Programming (ILP), a branch of Symbolic AI, to solve ARC. We have manually defined a simple Domain Specific Language (DSL) that corresponds to a small set of object-centric abstractions relevant to ARC. This is the Background Knowledge used by ILP to create Logic Programs that provide reasoning capabilities to our system. The full system is capable of generalize to unseen tasks, since ILP can create Logic Program(s) from few examples, in the case of ARC: pairs of Input-Output grids examples for each task. These Logic Programs are able to generate Objects present in the Output grid and the combination of these can form a complete program that transforms an Input grid into an Output grid. We randomly chose some tasks from ARC that dont require more than the small number of the Object primitives we implemented and show that given only these, our system can solve tasks that require each, such different reasoning.",
    "citation_count": 1
  },
  {
    "url": "https://arxiv.org/abs/2307.03697",
    "title": "Specification, Validation and Verification of Social, Legal, Ethical, Empathetic and Cultural Requirements for Autonomous Agents",
    "published_date": "2023-07-07",
    "abstract": "Autonomous agents are increasingly being proposed for use in healthcare, assistive care, education, and other applications governed by complex human-centric norms. To ensure compliance with these norms, the rules they induce need to be unambiguously defined, checked for consistency, and used to verify the agent. In this paper, we introduce a framework for formal specification, validation and verification of social, legal, ethical, empathetic and cultural (SLEEC) rules for autonomous agents. Our framework comprises: (i) a language for specifying SLEEC rules and rule defeaters (that is, circumstances in which a rule does not apply or an alternative form of the rule is required); (ii) a formal semantics (defined in the process algebra tock-CSP) for the language; and (iii) methods for detecting conflicts and redundancy within a set of rules, and for verifying the compliance of an autonomous agent with such rules. We show the applicability of our framework for two autonomous agents from different domains: a firefighter UAV, and an assistive-dressing robot.",
    "citation_count": 2
  },
  {
    "url": "https://www.alignmentforum.org/posts/ZEoyoccFoBQQRzbz2/deepmind-team-on-specification-gaming",
    "author": "Joshua Fox",
    "title": "DeepMind team on specification gaming - AI Alignment Forum",
    "published_date": "2023-02-06"
  },
  {
    "url": "https://www.lesswrong.com/posts/FgsoWSACQfyyaB5s7/shutdown-seeking-ai",
    "author": "Simon Goldstein",
    "title": "Shutdown-Seeking AI",
    "published_date": "2023-05-31"
  },
  {
    "url": "https://arxiv.org/abs/2206.05273",
    "title": "A General Framework for the Representation of Function and Affordance: A Cognitive, Causal, and Grounded Approach, and a Step Toward AGI",
    "published_date": "2022-06-02",
    "abstract": "The function and affordance of natural or artificial objects and various physical constructs feature prominently in the functioning of an intelligent system or an intelligent autonomous system (IAS). In navigating an environment, an IAS needs to understand the function and affordance of roads, stairs, bridges, and various physical constructs that may assist with or obstruct its movement to achieve its goal(s). When encountering objects, understanding their function and affordance so that they may be manipulated or made use of to support the IAS in performing certain required tasks is a key aspect of the intelligent functioning of the IAS. In AI research, so far, the attention paid to the characterization and representation of function and affordance has been sporadic and sparse, and it has not received the same attention as, say, object categorization or natural language processing, even though this aspect features prominently in an intelligent system's functioning, and is more fundamental and important in many ways. In the sporadic and sparse, though commendable efforts so far devoted to the characterization and understanding of function and affordance, there has also been no general framework that could unify all the different use domains and situations related to functionality, and that could provide an intelligent system or an IAS the necessary computational, representational, processing, and reasoning constructs to effect recognition, generation, and application of functional concepts. This paper develops just such a general framework, with an approach that emphasizes the fact that the representations involved must be explicitly cognitive and conceptual, and they must also contain the causal characterizations of the events and processes involved, as well as employ conceptual constructs that are grounded in the referents to which they refer, in order to achieve maximal generality for the framework to be applicable to a wide range of domains and situations. The basic general framework is described, along with a set of basic guiding principles with regards to representation of functionality. To properly and adequately characterize and represent functionality, a descriptive representation language is needed. This language is defined and developed, and many examples of its use are described. The general framework is developed based on an extension of the general language meaning representational framework called conceptual dependency. To support the general characterization and representation of functionality, the basic conceptual dependency framework is enhanced with representational devices called structure anchor and conceptual dependency elaboration, together with the definition of a set of ground level concepts. These novel representational constructs are defined, developed, and described. A general framework dealing with functionality would represent a major step toward achieving Artificial General Intelligence.",
    "citation_count": 4
  }
]