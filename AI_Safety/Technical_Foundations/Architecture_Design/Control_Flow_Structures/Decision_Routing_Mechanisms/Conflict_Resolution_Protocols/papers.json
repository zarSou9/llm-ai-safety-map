[
  {
    "url": "https://arxiv.org/abs/2407.08845",
    "title": "Optimal Protocols for 2-Party Contention Resolution",
    "published_date": "2024-07-11",
    "abstract": "\\emph{Contention Resolution} is a fundamental symmetry-breaking problem in which $n$ devices must acquire temporary and exclusive access to some \\emph{shared resource}, without the assistance of a mediating authority. For example, the $n$ devices may be sensors that each need to transmit a single packet of data over a broadcast channel. In each time step, devices can (probabilistically) choose to acquire the resource or remain idle; if exactly one device attempts to acquire it, it succeeds, and if two or more devices make an attempt, none succeeds. The complexity of the problem depends heavily on what types of \\emph{collision detection} are available. In this paper we consider \\emph{acknowledgement-based protocols}, in which devices \\underline{only} learn whether their own attempt succeeded or failed; they receive no other feedback from the environment whatsoever, i.e., whether other devices attempted to acquire the resource, succeeded, or failed. Nearly all work on the Contention Resolution problem evaluated the performance of algorithms \\emph{asymptotically}, as $n\\rightarrow \\infty$. In this work we focus on the simplest case of $n=2$ devices, but look for \\underline{\\emph{precisely}} optimal algorithms. We design provably optimal algorithms under three natural cost metrics: minimizing the expected average of the waiting times ({\\sc avg}), the expected waiting time until the first device acquires the resource ({\\sc min}), and the expected time until the last device acquires the resource ({\\sc max})."
  },
  {
    "url": "https://arxiv.org/abs/2408.11275",
    "title": "Softening the Impact of Collisions in Contention Resolution",
    "published_date": "2024-08-21",
    "abstract": "Contention resolution addresses the problem of coordinating access to a shared communication channel. Time is discretized into synchronized slots, and a packet can be sent in any slot. If no packet is sent, then the slot is empty; if a single packet is sent, then it is successful; and when multiple packets are sent at the same time, a collision occurs, resulting in the failure of the corresponding transmissions. In each slot, every packet receives ternary channel feedback indicating whether the current slot is empty, successful, or a collision. Much of the prior work on contention resolution has focused on optimizing the makespan, which is the number of slots required for all packets to succeed. However, in many modern systems, collisions are also costly in terms of the time they incur, which existing contention-resolution algorithms do not address. In this paper, we design and analyze a randomized algorithm, Collision Aversion Backoff (CAB), that optimizes both the makespan and the collision cost. We consider the static case where an unknown $n\\geq 2$ packets are initially present in the system, and each collision has a known cost $\\mathcal{C}$, where $1 \\leq \\mathcal{C} \\leq n^{\\kappa}$ for a known constant $\\kappa\\geq 0$. With error probability polynomially small in $n$, CAB guarantees that all packets succeed with makespan and a total expected collision cost of $\\tilde{O}(n\\sqrt{\\mathcal{C}})$. We give a lower bound for the class of fair algorithms: where, in each slot, every packet executing the fair algorithm sends with the same probability (and the probability may change from slot to slot). Our lower bound is asymptotically tight up to a $\\texttt{poly}(\\log n)$-factor for sufficiently large $\\mathcal{C}$."
  },
  {
    "url": "https://arxiv.org/pdf/2305.13464.pdf",
    "title": "Detection and mitigation of indirect conflicts between xApps in Open Radio Access Networks",
    "published_date": "2023-05-20",
    "abstract": "In Open Radio Access Networks, the Conflict Mitigation component, which is part of the Near-RT RIC, aims to detect and resolve any conflicts between xApp decisions. In this paper, we propose a universal method for detecting and resolving of indirect conflicts between xApps. Its efficiency is validated by extensive computer simulations. Our results demonstrate that, in the considered scenario, the mean bitrate satisfaction of users increases by 2%, while the number of radio link failures and ping-pong handovers in the network is significantly reduced.",
    "citation_count": 2
  },
  {
    "url": "https://arxiv.org/abs/2210.16511v2",
    "title": "A Uniform Approach to Compare Architectures in Decentralized Discrete-Event Systems",
    "published_date": "2022-10-29",
    "abstract": "Solutions to decentralized discrete-event systems problems are characterized by the way local decisions are fused to yield a global decision. A fusion rule is colloquially called an architecture. Current approaches do not provide a direct way to compare existing architectures. Determining whether an architecture is more permissive than another architecture had relied on producing examples ad hoc and on individual inspiration that puts the conditions for solvability in each architecture into some form that admits comparison. In response to these research efforts, a method based on morphisms between graphs has been extracted to yield a uniform approach to compare the permissiveness of the architectures.",
    "citation_count": 2
  },
  {
    "url": "https://arxiv.org/pdf/2111.06650v1.pdf",
    "title": "Robust and Optimal Contention Resolution without Collision Detection",
    "published_date": "2021-11-12",
    "abstract": "Contention resolution on a multiple-access communication channel is a classical problem in distributed and parallel computing. In this problem, a set of nodes arrive over time, each with a message it intends to send. Time proceeds in synchronous slots, and in each slot each node can broadcast its message or remain idle. If in a slot one node broadcasts alone, it succeeds; otherwise, if multiple nodes broadcast simultaneously, messages collide and none succeeds. Nodes can differentiate collision and silence (that is, no node broadcasts) only if a collision detection mechanism is available. Ideally, a contention resolution algorithm should satisfy at least three criteria: (a) low time complexity (i.e., high throughput), meaning it does not take too long for all nodes to succeed; (b) low energy complexity, meaning each node does not make too many broadcast attempts before it succeeds; and (c) strong robustness, meaning the algorithm can maintain good performance even if interference is present. Such interference is often modeled by jamming---a jammed slot always generates collision. Previous work has shown, with collision detection, there are \"perfect\" contention resolution algorithms satisfying all three criteria. On the other hand, without collision detection, it was not until 2020 that an algorithm was discovered which can achieve optimal time complexity and low energy cost, assuming there is no jamming. More recently, the trade-off between throughput and robustness was studied. However, an intriguing and important question remains unknown: without collision detection, are there \"perfect\" contention resolution algorithms? In other words, when collision detection is absent and jamming is present, can we achieve both low total time complexity and low per-node energy cost? In this paper, we answer the above question affirmatively. Specifically, a new randomized algorithm for robust contention resolution is developed, assuming collision detection is not available. Lower bound results demonstrate it achieves both optimal time complexity and optimal energy complexity. If all nodes start execution simultaneously---which is often referred to as the \"static case\" in literature---another algorithm is developed that runs even faster. The separation on time complexity suggests, for robust contention resolution without collision detection, \"batch\" instances (that is, nodes start simultaneously) are inherently easier than \"scattered\" ones (that is, nodes arrive over time).",
    "citation_count": 2
  },
  {
    "url": "https://arxiv.org/pdf/2102.09716v1.pdf",
    "title": "Tight Trade-off in Contention Resolution without Collision Detection",
    "published_date": "2021-02-19",
    "abstract": "In this paper, we consider contention resolution on a multiple-access communication channel. In this problem, a set of nodes arrive over time, each with a message it intends to send. In each time slot, each node may attempt to broadcast its message or remain idle. If a single node broadcasts in a slot, the message is received by all nodes; otherwise, if multiple nodes broadcast simultaneously, a collision occurs and none succeeds. If collision detection is available, nodes can differentiate collision and silence (i.e., no node broadcasts). Performance of contention resolution algorithms is often measured by throughput---the number of successful transmissions within a period of time; whereas robustness is often measured by jamming resistance---a jammed slot always generates a collision. Previous work has shown, with collision detection, optimal constant throughput can be attained, even if a constant fraction of all slots are jammed. The situation when collision detection is not available, however, remains unclear. In a recent breakthrough paper [Bender et al., STOC '20], a crucial case is resolved: constant throughput is possible without collision detection, but only if there is no jamming. Nonetheless, the exact trade-off between the best possible throughput and the severity of jamming remains unknown. In this paper, we address this open question. Specifically, for any level of jamming ranging from none to constant fraction, we prove an upper bound on the best possible throughput, along with an algorithm attaining that bound. An immediate and interesting implication of our result is, when a constant fraction of all slots are jammed, which is the asymptotic worst-case scenario, there still exists an algorithm achieving a decent throughput: Θ(t/log t) messages could be successfully transmitted within t slots.",
    "citation_count": 8
  }
]