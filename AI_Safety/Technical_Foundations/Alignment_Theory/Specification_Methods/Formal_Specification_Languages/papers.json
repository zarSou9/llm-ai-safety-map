[
  {
    "url": "https://arxiv.org/abs/2411.13269",
    "title": "Towards Specification-Driven LLM-Based Generation of Embedded Automotive Software",
    "published_date": "2024-11-20",
    "abstract": "The paper studies how code generation by LLMs can be combined with formal verification to produce critical embedded software. The first contribution is a general framework, spec2code, in which LLMs are combined with different types of critics that produce feedback for iterative backprompting and fine-tuning. The second contribution presents a first feasibility study, where a minimalistic instantiation of spec2code, without iterative backprompting and fine-tuning, is empirically evaluated using three industrial case studies from the heavy vehicle manufacturer Scania. The goal is to automatically generate industrial-quality code from specifications only. Different combinations of formal ACSL specifications and natural language specifications are explored. The results indicate that formally correct code can be generated even without the application of iterative backprompting and fine-tuning.",
    "citation_count": 2,
    "summary": "This paper proposes a framework, spec2code, for generating embedded automotive software using LLMs and formal verification, iteratively refining code through feedback. A feasibility study using Scania case studies demonstrates that formally correct code generation is possible even without iterative refinement."
  },
  {
    "url": "https://www.lesswrong.com/posts/dPpA79MjPdDd87YoW/understanding-goedel-s-completeness-theorem",
    "author": "Jessicata",
    "title": "Understanding Gödel's completeness theorem",
    "published_date": "2024-05-27",
    "summary": "This article presents a proof of a variant of Gödel's completeness theorem using sequent calculus, aiming for intuitive understanding rather than symbolic manipulation. The proof focuses on first-order theories, defining models and inference rules to demonstrate the theorem's soundness."
  },
  {
    "url": "https://arxiv.org/pdf/2304.12508.pdf",
    "title": "Fulfilling Formal Specifications ASAP by Model-free Reinforcement Learning",
    "published_date": "2023-04-25",
    "abstract": "We propose a model-free reinforcement learning solution, namely the ASAP-Phi framework, to encourage an agent to fulfill a formal specification ASAP. The framework leverages a piece-wise reward function that assigns quantitative semantic reward to traces not satisfying the specification, and a high constant reward to the remaining. Then, it trains an agent with an actor-critic-based algorithm, such as soft actor-critic (SAC), or deep deterministic policy gradient (DDPG). Moreover, we prove that ASAP-Phi produces policies that prioritize fulfilling a specification ASAP. Extensive experiments are run, including ablation studies, on state-of-the-art benchmarks. Results show that our framework succeeds in finding sufficiently fast trajectories for up to 97\\% test cases and defeats baselines.",
    "citation_count": 3,
    "summary": "ASAP-Phi, a model-free reinforcement learning framework, uses a piecewise reward function to train agents to satisfy formal specifications as quickly as possible, achieving high success rates in benchmarks compared to existing methods. The framework leverages actor-critic algorithms like SAC or DDPG."
  },
  {
    "url": "https://www.alignmentforum.org/posts/EKPSgN8LsiEJzX5ni/a-well-defined-history-in-measurable-factor-spaces",
    "author": "Matthias G. Mayer",
    "title": "A well-defined history in measurable factor spaces",
    "published_date": "2023-10-05",
    "summary": "This paper investigates minimal index functions in infinite factor spaces, showing the existence of an almost surely minimal index function (\"history\") that determines a function X given a feature Z, and proving its almost sure uniqueness. This is achieved by extending concepts from finite factor spaces to the infinite case using almost sure unions and intersections."
  },
  {
    "url": "https://arxiv.org/abs/2211.01341",
    "title": "A logical framework to model software development by multiple agents following a common specification",
    "published_date": "2022-11-02",
    "abstract": "\n In this paper, we address modelling program development by multiple different programmers (or programming teams) who work in different settings (programming languages or reasoning frameworks) but follow a common specification. After consideration of some philosophical issues regarding program development, including its similarities and dissimilarities with scientific theorizing, we extend a logical framework built to describe scientific theorizing in relativist settings: our extensions add the ability of reasoning about programs, the iterative process of their generation and their specifications. We are thus able to use the framework in order to make a first step towards examining at an abstract level the problem of translatability between the programs produced by program generators, by defining a notion of translation between the outputs of program generators and proving that there is such a (trivial) translation when two program generators follow the same specification reliably (in a specific sense of reliability).",
    "summary": "This paper presents a logical framework for modeling multi-agent software development from a common specification, extending a framework for scientific theorizing to encompass program generation, iteration, and specification, and demonstrating a trivial translation between program outputs when specifications are reliably followed."
  },
  {
    "url": "https://arxiv.org/abs/2210.10304",
    "title": "Synthesizing Reactive Test Environments for Autonomous Systems: Testing Reach-Avoid Specifications with Multi-Commodity Flows",
    "published_date": "2022-10-19",
    "abstract": "We study automated test generation for testing discrete decision-making modules in autonomous systems. Linear temporal logic is used to encode the system specification - requirements of the system under test - and the test specification, which is unknown to the system and describes the desired test behavior. The reactive test synthesis problem is to find constraints on system actions such that in a test execution, both the system and test specifications are satisfied. To do this, we use the specifications and their corresponding Büchi automata to construct the specification product automaton. Then, a virtual product graph representing all possible test executions of the system is constructed from the transition system and the specification product automaton. The main result of this paper is framing the test synthesis problem as a multi-commodity network flow optimization. This optimization is used to derive reactive constraints on system actions, which constitute the test environment. The resulting test environment ensures that the system meets the test specification while also satisfying the system specification. We illustrate this framework in simulation using grid world examples and demonstrate it on hardware with the Unitree A1 quadruped, where we test dynamic locomotion behaviors reactively.",
    "citation_count": 2,
    "summary": "This paper presents a method for automated test generation of autonomous systems, framing the reactive test synthesis problem as a multi-commodity network flow optimization to generate constraints ensuring both system and test specifications are satisfied during execution. This approach is demonstrated through simulations and hardware testing on a quadruped robot."
  },
  {
    "title": "Introduction to the Special Issue on Specification and Design Languages (FDL 2019)",
    "abstract": "The Forum on Specification and Design Languages (FDL) is a well-established international venue to exchange experiences and promote new trends in the application of languages, their associated design methods, and tools for the design of electronic systems. Electronic systems of interest to FDL include (but are not limited to) those that are used in Internet of Things (IoT), CyberPhysical Systems, mixed criticality embedded systems, embedded systems for high-performance computing and driver assistance, real-time systems, and reconfigurable and secure computing. FDL 2019 was held in Southampton, UK, September 2–4, bringing together 44 researchers and practicioners from 10 countries. The three keynotes covered themes ranging from designing heterogeneous domain-specific languages and compilers (David Broman, KTH Royal Institute of Technology, Stockholm) over balancing implementability, understandability, and expressiveness in language design (Stephen A. Edwards, Columbia University, New York) to formal languages for embedded critical software (Marc Pouzet, École Normale Supérieure, Paris). In addition, the technical program of FDL 2019 contained two tutorials, two panels, and six technical sessions with a total of 26 presentations. To allow for more in-depth treatment of selected contributions and to further broaden the audience, an open call was made for this special issue in ACM TECS. As a result, six updated and extended papers from FDL'19 are included here, joined by a seventh paper on original work not presented at FDL before. “SystemC implementation of Stochastic Petri Nets for Parametrization of Biological Networks” is authored by Nicola Bombieri, Silvia Scaffeo, Antonio Mastrandrea, Simone Caligola, Tommaso Carlucci, Franco Fummi, Carlo Laudanna, Gabriela Constantin, and Rosalba Giugno. This multidisciplinary paper presents a framework for the modeling and simulation of biological network using Stochastic Petri Nets. To achieve automatic model parametrization, the Stochastic Petri Nets model is implemented into SystemC code, while user-defined properties are specified with a formal specification language. Then, Dynamic Assertion-Based Verification is used to synthesize an appropriate network and parameter configuration that satisfies the defined properties. This allows the system to be simulated under different conditions and network properties. “Event-B Hybridation: A Proof and Refinement Based Framework for Modelling Hybrid Systems,” by Guillaume Dupont, Yamine Ait-Ameur, Marc Pantel, and Neeraj Singh, is an original work not presented at FDL '19. It addresses the difficult topic of the formal proof (in the proof assistant sense) and the incremental design of hybrid systems. The underlying proof assistant is the Rodin Proof Manager and its associated programming language Event-B (based on the B method by Abrial). Hybrid systems are modeled as standard hybrid automata with simple differential equations, which is classical. The strong point of the proposed approach is that the proof obligations",
    "published_date": "2021-05-28",
    "url": "https://dl.acm.org/doi/10.1145/3458748",
    "summary": "This special issue of ACM TECS features seven papers, six extended from the 2019 Forum on Specification and Design Languages (FDL) conference and one original contribution. The papers cover diverse topics in the design and verification of electronic systems, focusing on languages, methods, and tools for various application domains."
  },
  {
    "url": "https://arxiv.org/pdf/2104.01385.pdf",
    "title": "A Specification-Guided Framework for Temporal Logic Control of Nonlinear Systems",
    "published_date": "2021-04-03",
    "abstract": "This article proposes a specification-guided framework for control of nonlinear systems with linear temporal logic (LTL) specifications. In contrast with well-known abstraction-based methods, the proposed framework directly characterizes the winning set, i.e., the set of initial conditions from which a given LTL formula can be realized, over the continuous state space of the system via a monotonic operator. Following this characterization, an algorithm is proposed to practically approximate the operator via an adaptive interval subdivision scheme, which yields a finite-memory control strategy. We show that the proposed algorithm is sound for full LTL specifications, and robustly complete for specifications recognizable by deterministic Büchi automaton (DBA), the latter in the sense that control strategies can be found whenever the given specification can be satisfied with additional bounded disturbances. Without having to compute and store the abstraction and the resulting product system with the DBA, the proposed method is more memory efficient, which is demonstrated by complexity analysis and performance tests. A preprocessing stage is also devised to reduce computational cost via a decomposition of the specification. We show that the proposed method can effectively solve real-world control problems, such as jet engine compressor control and motion planning for manipulators and mobile robots.",
    "citation_count": 4,
    "summary": "This paper presents a novel framework for controlling nonlinear systems to satisfy linear temporal logic (LTL) specifications by directly characterizing the winning set in the continuous state space using a monotonic operator and an adaptive interval subdivision scheme. The resulting algorithm is sound for full LTL and robustly complete for DBA-recognizable specifications, offering improved memory efficiency compared to abstraction-based methods."
  }
]